// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YiyiCook.EntityFrameworkCore;

namespace YiyiCook.Migrations
{
    [DbContext(typeof(YiyiCookDbContext))]
    [Migration("20210409121736_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiyiCook.Core.Models.Food", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long?>("Fcid")
                        .HasColumnName("fcid")
                        .HasColumnType("bigint");

                    b.Property<string>("HeadImgUrl")
                        .HasColumnName("headImgUrl")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("IsEnabled")
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ProduceVideoUrl")
                        .HasColumnName("produceVideoUrl")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VideoUrl")
                        .HasColumnName("videoUrl")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodClassfy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsEnabled")
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("FoodClassfy");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodImg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<long>("Fid")
                        .HasColumnName("fid")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("url")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("FoodImg");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodIngredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("Fid")
                        .HasColumnName("fid")
                        .HasColumnType("bigint");

                    b.Property<long>("Fiid")
                        .HasColumnName("fiid")
                        .HasColumnType("bigint");

                    b.Property<int>("Num")
                        .HasColumnName("num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoodIngredient");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodIngredientSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnName("unitName")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("FoodIngredientSource");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("updated")
                        .HasColumnType("datetime");

                    b.Property<byte>("State")
                        .HasColumnName("state")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Type")
                        .HasColumnName("type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("FoodOrder");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("Fid")
                        .HasColumnName("fid")
                        .HasColumnType("bigint");

                    b.Property<long>("Foid")
                        .HasColumnName("foid")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Num")
                        .HasColumnName("num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoodOrderItem");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodProduceProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long>("Fid")
                        .HasColumnName("fid")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("updated")
                        .HasColumnType("datetime");

                    b.Property<int>("RankNum")
                        .HasColumnName("rankNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoodProduceProcess");
                });

            modelBuilder.Entity("YiyiCook.Core.Models.FoodProduceProcessImg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<long>("Fppid")
                        .HasColumnName("fppid")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("url")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("FoodProduceProcessImg");
                });
#pragma warning restore 612, 618
        }
    }
}
